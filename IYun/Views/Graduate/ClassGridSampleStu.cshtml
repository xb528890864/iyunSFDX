@{
    Layout = null;
}
@using System.Configuration
@using System.Linq
@using IYun.Models
@using IYun.Object
@model List<IYun.Controllers.ControllerObject.GridSampleScoreListDto>
@{
    Layout = null;
    var modulePowers = ViewBag.modulePowers as List<ModulePower>;
    modulePowers = modulePowers ?? new List<ModulePower>();

    var year = Convert.ToInt32(ViewData["year"]);
    var school = Convert.ToInt32(ViewData["school"]);
    var edutype = Convert.ToInt32(ViewData["edutype"]);
    var stutype = Convert.ToInt32(ViewData["stutype"]);
    var majorlib = Convert.ToInt32(ViewData["majorlib"]);
    var gradaue = ViewBag.graduate;
}
<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>@ConfigurationManager.AppSettings["SchoolTitle"]</title>
    <link rel="stylesheet" href="~/Content/manage/style/css.css?v=1" type="text/css" /><!-- 全部样式 -->
    <link rel="stylesheet" href="~/Content/manage/style/reset.css" type="text/css" /><!-- 重置样式 -->
    <link href="~/Content/manage/style/pic.css" rel="stylesheet" type="text/css" /><!-- 相册样式 -->
    <!--[ifltIE9]>
    <script type="text/javascript" src="js/html5shiv.js"></script>
    <![endif]-->
    <!-- 使得ie678支持HTML5标签 -->
    <!--[ifltIE10]> 
    <script type="text/javascript" src="~/Content/manage/js/PIE.js"></script>
    <![endif]-->
    <!-- 使得ie6789支持CSS3样式 -->
    <script src="~/Content/js/jquery-1.9.1.min.js"></script>
    <script src="~/Content/manage/js/jquery.nicescroll.js" type="text/javascript"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <script src="/Scripts/bootstrap.js"></script>
    <script src="/Scripts/respond.js"></script>
    <script src="~/Content/manage/ComboboxBind.js?v=1"></script>  
    <script src="~/Content/EasyUI/easyloader.js"></script>
    <link href="~/Content/EasyUI/combo.css" rel="stylesheet" />
    <link href="~/Content/EasyUI/combobox.css" rel="stylesheet" />
    <link href="~/Content/EasyUI/panel.css" rel="stylesheet" />
    <link href="~/Content/EasyUI/textbox.css" rel="stylesheet" />
    <script type="text/javascript">
        //EvPNG.fix('div, ul, img, li, input');

        $(function () {
            if (window.PIE) {
                $('.rounded').each(function () {
                    PIE.attach(this);
                });
            }
        });
        function yanzheng() {
            if ($('#EnrollYear2').val() == 0) {
                alert("请选择入学年份");
                return false;
            }

            if ($('#SubSchool').combobox('getValue') == 0) {
                alert("请选择函授站");
                return false;
            }
            if ($('#MajorLibrary').combobox('getValue')== 0) {
                alert("请选择专业");
                return false;
            }
            return true;
        }
    </script>
    <style>
        .xx-table td {
            border: 1px solid #e9e9e9;
        }

        thead tr td {
            width: 50px;
        }
        /*.inputscore {
            width:30px;
            border:0px;
        }*/
    </style>
</head>

<body>
    @Html.Action("Top", "AdminBase")
    <div class="main center">
        <div id="main-tl">
            <div class="left-t">毕业管理</div>
            <div class="left-c">
                @{
                    foreach (var modulePower in modulePowers)
                    {
                        if (modulePower.y_url.ToLower() == "/Graduate/ClassGridSampleStu".ToLower())
                        {
                            <a class="on" href="@modulePower.y_url">@modulePower.y_moudleName</a>
                        }
                        else
                        {
                            <a href="@modulePower.y_url">@modulePower.y_moudleName</a>
                        }
                    }
                }
            </div>
        </div>
        <div id="main-tr" class="tb-chk" style="overflow-x: scroll;">
            <form action="@Url.Action("ClassGridSampleStu", "Graduate")" id="searchForm" method="post">
                <div class="zc-head">
                    <div class="zc-inn">
                        <span style="margin-left: 20px;">年度</span>
                        @Html.Action("EnrollYear2", "Helper", new HelperParameterM { style = "width:200px;font-size: 18px;", index = year })
                    </div>
                    <div class="zc-inn">
                        <span style="margin-left: 20px;">函授站</span>
                        @Html.Action("SubSchool", "Helper", new HelperParameterM { className = "easyui-combobox" })
                    </div>
                    <div class="zc-inn">
                        <span>层次</span>
                        @Html.Action("EduType", "Helper", new HelperParameterM { style = "width:100px;font-size: 18px;", index = edutype })
                    </div>
                    <div class="zc-inn">
                        <span>专业</span>
                        @Html.Action("MajorLibrary", "Helper", new HelperParameterM {className = "easyui-combobox"})
                    </div>
                    <div class="zc-inn">
                        <span>形式</span>
                        @Html.Action("StuType", "Helper", new HelperParameterM { style = "width:100px;font-size: 18px;", index = stutype })
                    </div>
                </div>
                <div class="zc-head">
                    <input style="margin-top: 12px; height: 32px; line-height: 30px; float: right" class="cx-sub" type="button" value="导出" onclick="ExcelDown()" />
                    <input style="margin-top: 12px; height: 32px; line-height: 30px; float: right" class="cx-sub" type="submit" onclick="return yanzheng()" value="查找"/>

                </div>
            </form>

            @if (Model.Any() && Model.All(u => u.CourseId != null))
            {
                //主干课程
                var termlist = Model.Where(u => u.hasPermission == 1).GroupBy(u => new
                {
                    u.CourseId,
                    u.CourseName
                }).Select(u => u.Key).OrderBy(u => u.CourseId).ToList();
               
                //抽考课程
                var samplelist = Model.Where(u => u.hasPermission == 2).GroupBy(u => new
                {
                    u.CourseId,
                    u.CourseName
                }).Select(u => u.Key).OrderBy(u => u.CourseId).ToList();

                var stulist = Model.OrderBy(u => u.StuId).GroupBy(u => new
                {
                    u.StuId,
                    u.StuName

                }).ToList();

                <table class="xx-table ydong-tab" style="width: 1500px;">
                    <thead>
                        <tr>
                            <td rowspan="2">姓名</td>
                            <td colspan="@termlist.Count()">主干课程</td>
                            <td colspan="@samplelist.Count()">抽考课程</td>
                            <td rowspan="2">学位英语</td>
                        </tr>
                        @*<tr>
                                @foreach (var item in termlist)
                                {
                                    <td colspan="@item.Count()">@item.Key</td>
                                }
                                @foreach (var item in samplelist)
                                {
                                    <td colspan="@item.Count()">@item.Key</td>
                                }
                            </tr>*@
                        <tr>
                            @foreach (var item in termlist)
                            {
                                <td>@item.CourseName</td>
                            }
                            @foreach (var item in samplelist)
                            {
                                <td>@item.CourseName</td>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var stu in stulist)
                        {
                            <tr class="mack">
                                <td>@stu.Key.StuName</td>

                                @foreach (var item in termlist)
                                {
                                    <td style="display: none;" class="stuId">@stu.Key.StuId</td>
                                        <td style="display: none;" class="courseId">@item.CourseId</td>
                                        @*<td style="display: none;" class="term">@iaa.Team</td>*@

                                var score = stu.OrderByDescending(u => u.TotalScore).First(u => u.CourseId == item.CourseId);

                                if (score.ScoreId != null)
                                {
                                    if (score.TotalScore >= 100 || score.TotalScore < 60)
                                    {
                                        <td style="color: red;">@S(score.TotalScore)</td>
                                        }
                                        else
                                        {
                                            <td style="">@S(score.TotalScore)</td>
                                        }
                                        <td style="display: none;" class="scoreId">@score.ScoreId</td>
                                    }
                                    else
                                    {
                                        <td style="color: red;">0</td>
                                            <td style="display: none;" class="scoreId">0</td>
                                    }

                                }
                                @foreach (var item in samplelist)
                                {
                                    <td style="display: none;" class="stuId">@stu.Key.StuId</td>
                                        <td style="display: none;" class="courseId">@item.CourseId</td>
                                        @*<td style="display: none;" class="term">@iaa.Team</td>*@

                                var score = stu.OrderByDescending(u => u.TotalScore).First(u => u.CourseId == item.CourseId);

                                if (score.ScoreId != null)
                                {
                                    if (score.TotalScore >= 100 || score.TotalScore < 60)
                                    {
                                        <td style="color: red;">@S(score.TotalScore)</td>
                                        }
                                        else
                                        {
                                            <td style="">@S(score.TotalScore)</td>
                                        }
                                        <td style="display: none;" class="scoreId">@score.ScoreId</td>
                                    }
                                    else
                                    {
                                        <td style="color: red;">0</td>
                                            <td style="display: none;" class="scoreId">0</td>
                                    }
                                }
                                @{
                                    var num = 0;
                                    foreach (var grad in gradaue)
                                    {
                                        var sco = stu.FirstOrDefault(u => u.StuId == grad.y_stuId);
                                        if (sco != null)
                                        {
                                            if (grad.y_sumsore < 60)
                                            {
                                                <td style="color: red;">@grad.y_sumsore</td>
                                            }
                                            else
                                            {
                                                <td>@grad.y_sumsore</td>
                                            }
                                            num++;
                                            break;
                                        }
                                        else
                                        {
                                            continue;
                                        }
                                    }
                                    if (num == 0)
                                    {
                                        <td style="color: red;">0</td>
                                    }
                                }
                            </tr>
                                    }
                    </tbody>
                </table>
                                    }
                                    else
                                    {
                                        if (school != 0 && edutype != 0 && year != 0 && stutype != 0 && majorlib != 0)
                                        {
                                            <div style="position: relative; top: 10px; font-size: 35px; color: red; text-align: center;">未找到符合条件的学生</div>
                                        }

                                    }
        </div>
    </div>
    <script>
        $(document).ready(function () {
            $("#uploadsub").click(function () {
                $(".show-c").css('display', 'none');
                $(".upload").click(function () {
                    $(this).parents(".nava1").find(".show-bg").stop().fadeTo(500, 1);
                    $(this).parents(".nava1").find(".show-c").css("display", "block");
                });
                $(".close").click(function () {
                    $(this).parents(".nava1").find(".show-bg").css('display', 'none');
                    $(this).parents(".nava1").find(".show-c").css("display", "none");
                });
            });

            if ($('#EnrollYear2').find("option").eq(0).val() == 0) {
                $('#EnrollYear2').find("option").eq(0).remove();  //除去年度中的全部
            }
            SearchMajor();
        });


        function yearchangeComple2() { //年份回调
            SearchSchool();
        }
        function schoolchangeComple() { //函授站回调
            SearchMajor();
        }
        function eduTypechangeComple() { //层次改变回调
            SearchMajor();
        }
        function stuTypechangeComple() {
            SearchMajor();
        }
        function SearchSchool() {
            var year = $('#EnrollYear2').val();
            //$('#SubSchool').attr("disabled", true);
            $('#SubSchool').combobox("disable");
            $.ajax({
                url: '@Url.Action("GetSchoolByYear_Stu", "Helper")',
                data: {
                    year: year
                },
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    //$('#SubSchool').bindData(data, 'y_subSchoolId', 'schoolName');
                    //$('#SubSchool').attr("disabled", false);
                    LoadCombobox('#SubSchool', data, 'y_subSchoolId', 'schoolName');
                    SearchMajor();
                },
                error: function () {
                    //$('#SubSchool').attr("disabled", false);
                    $('#SubSchool').combobox("enable");
                }
            });
        }
        function SearchMajor() {
            //var schoolId = $('#SubSchool').val();
            var schoolId = $('#SubSchool').combobox('getValue');
            var year = $('#EnrollYear2').val();
            var eduId = $('#EduType').val();
            var stuTypeId = $('#StuType').val();

            if (schoolId == 0 || year == 0 || eduId == 0 || stuTypeId == 0) {
                //$('#MajorLibrary').bindData([], 'id', 'y_name');
                LoadCombobox('#MajorLibrary', [], 'id', 'y_name');
                return;
            }

            //$('#MajorLibrary').attr("disabled", true);
            $('#MajorLibrary').combobox("disable");
            $.ajax({
                url: '@Url.Action("GetMajorLibrary_Stu", "Helper")',
                data: {
                    eduId: eduId,
                    stuTypeId: stuTypeId,
                    schoolId: schoolId,
                    year: year
                },
                type: 'post',
                dataType: 'json',
                success: function(data) {
                    @*$('#MajorLibrary').bindData(data, 'y_majorLibId', 'majorLibraryName');
                    $('#MajorLibrary').attr("disabled", false);
                    $('#MajorLibrary').val('@majorlib');*@
                    LoadCombobox('#MajorLibrary', data, 'y_majorLibId', 'majorLibraryName');
                },
                error: function () {
                    //$('#MajorLibrary').attr("disabled", false);
                    $('#MajorLibrary').combobox("enable");
                }
            });
        }
        function ExcelDown() {
            $.ajax({
                url: '@Url.Action("ClassGridSampleStuDown", "Graduate")',
                data: $("#searchForm").serialize(),
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    if (data.IsOk) {
                        window.open(data.Message);
                    } else {
                        console.log(data.Message);
                    }
                }
            });
        }

        //EasyUi
        $(document).ready(function () {
            //设置面板长度
            $('select.easyui-combobox').attr("panelHeight", "400");
            //设置面板宽度
            $('select.easyui-combobox').css("width", "250px");

            easyloader.css = false;

            easyloader.load('combobox', function () { // 加载指定模块
                $('select.easyui-combobox').combobox({
                    onHidePanel: function () {
                        if (isNaN($(this).combobox('getValue'))) {
                            var $this = $(this);

                            var valueField = $this.combobox('options').valueField;
                            var textField = $this.combobox('options').textField;

                            var text = $this.combobox('getValue');
                            var data = $this.combobox('getData');

                            $.each(data, function (i, n) {
                                if (eval('n.' + textField).indexOf(text) >= 0) {
                                    $this.combobox('setValue', eval('n.' + valueField));
                                    return false;
                                }
                            });

                            if (isNaN($(this).combobox('getValue'))) {
                                $this.combobox('setValue', 0);
                            }

                        }
                    }
                });

                $(".combo").click(function() {
                    if ($(this).prev().combobox("panel").is(":visible")) {
                        //$(this).prev().combobox("hidePanel");
                    } else {
                        $(this).prev().combobox("showPanel");
                    }
                });


            });

            easyloader.onLoad = function (name){
                if (name.length == 1 &&name[0] == "combobox") {

                    //赋初始值 (赋值时会触发onchange事件)
                    $('#SubSchool').combobox('setValue', @school);
                    $('#MajorLibrary').combobox('setValue', @majorlib);
                }
            }
        });
    </script>
    @Html.Action("Foot", "AdminBase")
</body>
</html>
